@mixin styleText($color, $fs, $fw) {
  color: $color;
  font-size: $fs;
  font-weight: $fw;
}
@mixin styleButton($color, $bg-color, $border-color, $fs, $fw, $pd-y, $pd-x) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border-color;
  font-size: $fs;
  font-weight: $fw;
  padding: $pd-y $pd-x;
  cursor: pointer;
  border-radius: $border-radius;
}

@mixin hoverButton($color-hover, $bg-hover, $border-hover) {
  color: $color-hover;
  background-color: $bg-hover;
  border: 1px solid $border-hover;
}

@mixin searchForm($bground-color, $placeholder-color, $bg-focus, $bg-focus-1) {
  .input-group {
    background-color: $bground-color;

    .form-control {
      background-color: transparent;
      border-right-color: transparent;
      box-shadow: none;
      transition: all 0.5s;
      &::placeholder {
        color: $placeholder-color;
      }
      &:focus {
        background-color: $bg-focus;
        border-color: $color-gray-2;
        border-right-color: transparent;
      }
      &:focus + .input-group-append {
        background-color: $bg-focus-1;
      }
    }
    .input-group-append {
      .input-group-text {
        border-left-color: transparent;
        background-color: transparent;
        i {
          color: $color-red-0;
        }
      }
      transition: all 0.5s;
      &:hover {
        background-color: $color-red-0;
        i {
          color: $color-white-0;
        }
      }
    }
  }
}

@mixin responsive($screen) {
  @if map-has-key($map: $breakpoints, $key: $screen) {
    $value: map-get(
      $map: $breakpoints,
      $key: $screen,
    );
    @media screen and (max-width: $value) {
      @content;
    }
  } @else {
    @warn "`{$screen} is not exist in breakpoints`";
  }
}
